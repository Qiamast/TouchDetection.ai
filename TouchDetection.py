import openai_secret_manager
import openai
import requests
from requests.structures import CaseInsensitiveDict
import json
import pydub
import argparse

QUERY_URL = "https://api.openai.com/v1/images/generations"

secrets = openai_secret_manager.get_secret("openai")
api_key = secrets["api_key"]
openai.api_key = api_key

detector = Detector()

def detect_ai_text(text):
    response = openai.Completion.create(
        engine="text-davinci-002",
        prompt=(f"Is this text generated by AI: {text}"),
        temperature=0.5
    )
    return response.choices[0].text

def detect_ai_image(image_url):
    headers = CaseInsensitiveDict()
    headers["Content-Type"] = "application/json"
    headers["Authorization"] = f"Bearer {secrets['api_key']}"

    data = """
    {
        """
    data += f'"model": "image-alpha-001",'
    data += f'"data": [{{ "url": "{image_url}" }}],'
    data += """
        "num_images":1,
        "size":"256x256",
        "response_format":"url"
    }
    """

    resp = requests.post(QUERY_URL, headers=headers, data=data)

    if resp.status_code != 200:
        raise ValueError("Failed to generate image "+resp.text)

    response_text = json.loads(resp.text)
    return response_text["data"][0]["url"]

def detect_deepfake(video_path):
    result = detector.detect(video_path)
    return result

def detect_ai_audio(audio_path):
    sound = AudioSegment.from_file(audio_path)
    return sound.duration_seconds



def main():
    parser = argparse.ArgumentParser(description="Detection of AI-generated multimedia.")

    parser.add_argument("-t", "--text", help="Text to detect AI generation.")
    parser.add_argument("-i", "--image", help="Image url to detect AI generation.")
    parser.add_argument("-v", "--video", help="Video path to detect deepfake.")
    parser.add_argument("-a", "--audio", help="Audio path to detect AI generation.")

    args = parser.parse_args()

    if args.text:
        print("Text: ", detect_ai_text(args.text))
    if args.image:
        print("Image: ", detect_ai_image(args.image))
    if args.video:
        print("Video: ", detect_deepfake(args.video))
    if args.audio:
        print("Audio: ", detect_ai_audio(args.audio))

if __name__ == "__main__":
    main()

